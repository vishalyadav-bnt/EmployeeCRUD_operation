name: Static Application Security Testing with SonarQube and Docker

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  sonar-scan:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13.3
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: root
          POSTGRES_DB: Employee
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Grant execute permission for Gradle
        run: chmod +x employee/gradlew

      - name: Cache SonarQube packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
 
      - name: Wait for SonarQube to be ready
        run: |
          timeout 300 bash -c 'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' localhost:9000)" != "200" ]]; do sleep 5; done'
 
      - name:  Generate authentication token
        run: |
          echo "SONAR_TOKEN=$(curl -X POST -u admin:admin 'http://localhost:9000/api/user_tokens/generate' \
            -H 'Content-Type: application/x-www-form-urlencoded' \
            --data-raw 'name=github-action' | jq -r '.token')" >> $GITHUB_ENV
 
      - name: Build and analyze with SonarQube
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_HOST_URL: http://localhost:9000
        run: |
          mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
          -Dsonar.projectKey=spring-boot-app \
          -Dsonar.host.url=${{ env.SONAR_HOST_URL }} \
          -Dsonar.login=${{ env.SONAR_TOKEN }} \
          -Dsonar.sourceEncoding=UTF-8 \
          -Dsonar.java.binaries=target/classes \
          -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml \
          -Dsonar.analysis.mode=publish
          
      - name: Upload SARIF Report
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: employee/build/reports/sonar/report.sarif
