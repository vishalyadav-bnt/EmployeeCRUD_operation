name: Static Application Security Testing with SonarQube and TestContainers

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  sonar-scan:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13.3
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: root
          POSTGRES_DB: Employee
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Grant execute permission for Gradle
        run: chmod +x employee/gradlew

      - name: Build with Gradle and Run SonarQube Test
        run: |
          cd employee
          gradlew clean build --warning-mode all  # Show all deprecation warnings
          gradlew test --tests SonarQubeIntegrationTest

          # Get the SonarQube container port dynamically
          SONAR_PORT=$(docker port $(docker ps -q --filter "ancestor=sonarqube:community") 9000 | cut -d: -f2)

          # Run the SonarQube analysis, pointing to the correct container port
          ./gradlew sonar \
            -Dsonar.projectKey=employee \
            -Dsonar.host.url=http://localhost:${SONAR_PORT} \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}  # Ensure SONAR_TOKEN is set in GitHub Secrets

      - name: Upload SARIF Report
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: employee/build/reports/sonar/report.sarif
